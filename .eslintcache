[{"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\App.js":"1","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\reportWebVitals.js":"2","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Home.js":"3","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\index.js":"4","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Navi.js":"5","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Board.js":"6","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Post.js":"7","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Comment.js":"8","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\CreatePost.js":"9","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\CreateComment.js":"10","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\EditPost.js":"11","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\EditComment.js":"12","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Authors.js":"13","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\AuthorStats.js":"14"},{"size":197,"mtime":1607709735726,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607372859761,"results":"17","hashOfConfig":"16"},{"size":1312,"mtime":1607940877623,"results":"18","hashOfConfig":"16"},{"size":778,"mtime":1607711094398,"results":"19","hashOfConfig":"16"},{"size":1918,"mtime":1607711213528,"results":"20","hashOfConfig":"16"},{"size":2692,"mtime":1607896634715,"results":"21","hashOfConfig":"16"},{"size":5485,"mtime":1607952350049,"results":"22","hashOfConfig":"16"},{"size":1913,"mtime":1607896589614,"results":"23","hashOfConfig":"16"},{"size":5051,"mtime":1607952815794,"results":"24","hashOfConfig":"16"},{"size":1589,"mtime":1607896593825,"results":"25","hashOfConfig":"16"},{"size":4744,"mtime":1607944248439,"results":"26","hashOfConfig":"16"},{"size":1442,"mtime":1607896605640,"results":"27","hashOfConfig":"16"},{"size":3461,"mtime":1607957415984,"results":"28","hashOfConfig":"16"},{"size":1116,"mtime":1607951903756,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"14ns5x8",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\App.js",["71"],"import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n",["72","73"],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\reportWebVitals.js",[],["74","75"],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Home.js",["76","77"],"import React, { useState } from 'react'\r\nimport \"../Styles/Home.css\";\r\nimport {Container,Row,Col} from 'react-bootstrap';\r\nimport Navi from './Navi';\r\nimport Board from './Board';\r\nfunction Home() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs=\"1\"  sm=\"1\"  md=\"1\"  lg=\"1\"  xl=\"2\"  id=\"col-1\"></Col>\r\n                    <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"8\"  id=\"col-2\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"0\" xl=\"2\">\r\n                            \r\n                            </Col>\r\n                            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"8\">\r\n                                <div className=\"scroll-container\">\r\n                                    <Board/>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs=\"0\"  sm=\"0\"  md =\"0\" lg=\"0\"  xl=\"2\"></Col>\r\n                        </Row>\r\n                    </Container>\r\n                    </Col>\r\n                    <Col xs=\"1\"  sm=\"1\"  md=\"1\"  lg=\"1\"  xl=\"2\" id=\"col-3\">\r\n    \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n",["78","79"],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\index.js",[],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Navi.js",["80"],"import React, { useState } from 'react'\r\nimport {Navbar , Nav ,InputGroup,FormControl} from 'react-bootstrap'\r\nimport '../Styles/Nav.css'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\n\r\nfunction Navi(props) {\r\n\r\n    const [searchValue, setSearchValue]= useState('');\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        if(e.key==='Enter'){\r\n           props.search(searchValue);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setSearchValue(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"Navi\">\r\n              <Navbar className=\"Navbar\" bg=\"light\" variant=\"light\" >\r\n                    <Navbar.Brand href=\"/\">\r\n                        <HomeIcon fontSize=\"large\"/>\r\n                        <span>Posts</span>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Brand href=\"/Authors\">\r\n                        <PersonIcon fontSize=\"large\" />\r\n                        <span>Authors</span>\r\n                    </Navbar.Brand>\r\n                \r\n                    \r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"inputGroup-sizing-default\">Search</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                                aria-label=\"Large\"\r\n                                aria-describedby=\"inputGroup-sizing-default\"\r\n                                placeholder=\"Search posts by #tag\"\r\n                                onKeyUp={e => handleSubmit(e)}\r\n                                 onChange={(e)=>handleChange(e)} \r\n                                 value={searchValue} \r\n                            />\r\n                        </InputGroup>\r\n             \r\n                </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navi\r\n","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Board.js",["81","82","83","84","85","86","87","88","89","90","91"],"import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport Post from './Post'\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\nimport '../Styles/Board.css'\r\nimport CreatePost from './CreatePost'\r\nimport axios from 'axios'\r\n\r\nimport Navi from './Navi'\r\n\r\nconst postsPerPage = 50;\r\nlet arrayForHoldingPosts = [];\r\nconst url='https://blog-api-spring.herokuapp.com';\r\n\r\nfunction Board() {\r\n\r\n    const[loading ,setLoading]=useState(true);\r\n    const [error , setError] = useState(false);\r\n    const[posts, setPosts] = useState([]);\r\n    const [postsToShow, setPostsToShow] = useState([]);\r\n    const [next, setNext] = useState(3);\r\n    const[authors, setAuthors]=useState([]);\r\n    \r\n    useEffect(() => {\r\n\r\n      const loadData = async () => {\r\n        console.log(\"loading posts...\");\r\n        setLoading(true);\r\n        setError(false);\r\n        await axios({\r\n            method: 'GET',\r\n            url: `${url}/posts/get`,\r\n        }).then(res => {\r\n            res.data.map((data,index) => {\r\n                if(!posts.includes(data)){\r\n                    posts.push(data);\r\n                }\r\n            });\r\n            posts.reverse();\r\n            setLoading(false);\r\n            loopWithSlice(0,postsPerPage);\r\n        }).catch(e => {\r\n            setError(true);\r\n        })\r\n      }\r\n    \r\n  loadData();\r\n}, [])\r\n\r\n\r\n    const searchTags = (tag) => {\r\n        if(tag!==''){\r\n          searchPosts(tag);\r\n        }else setPostsToShow(arrayForHoldingPosts);\r\n    }\r\n    \r\n    const searchPosts = async (tag) =>{\r\n       await axios.get(`${url}/posts/tag/${tag}`)\r\n       .then(res =>  setPostsToShow(res.data));\r\n    }\r\n\r\n    const loopWithSlice = (start, end) => {\r\n        let slicedPosts = posts.slice(start, end);\r\n        arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\r\n        setPostsToShow(arrayForHoldingPosts);\r\n      };\r\n\r\n      const handleShowMorePosts = () => {\r\n        loopWithSlice(next, next + postsPerPage);\r\n        setNext(next + postsPerPage);\r\n      };\r\n\r\n      const newPostAdded = () => {\r\n        setNext(0);\r\n        window.location.reload();\r\n      }\r\n    return (\r\n        <div>\r\n               <Navi search={searchTags}/>\r\n                <CreatePost updatePosts={newPostAdded} />\r\n\r\n                {\r\n                    postsToShow.map(post => {\r\n                    return <div key={post.id}><Post content={post.postContent} id={post.id} tag={post.tag} /></div>\r\n                    })\r\n                } \r\n                {loading&&<div>Loading...</div>}\r\n               \r\n      \r\n            <button onClick={handleShowMorePosts}>Load more</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n",["92","93"],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Post.js",["94","95","96"],"import React, { useEffect, useState } from 'react'\r\nimport '../Styles/Post.css'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Comment from './Comment';\r\nimport CreateComment from './CreateComment';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Col,Row,Container } from 'react-bootstrap';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios'\r\nimport EditPost from './EditPost';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst url='https://blog-api-spring.herokuapp.com';\r\nfunction Post(props) {\r\n    const [commentsVisibility,setCommentVisibility] = useState(false);\r\n    const [authors , setAuthors]= useState([]);\r\n    const [comments, setComments]= useState([]);\r\n    const [editStatus, setEditStatus]=useState(false);\r\n    const [modalVisibility, setModalVisibility] = useState(false);\r\n    const showComments = () =>{\r\n        setCommentVisibility(!commentsVisibility);\r\n    }\r\n\r\n    async function loadComments(){\r\n        const result = await axios.get(`${url}/post${props.id}/comments`);\r\n        if(result.data!=null) setComments(result.data);\r\n   }\r\n    async function loadAuthors(){\r\n        const result = await axios.get(`${url}/post${props.id}/authors`);\r\n        if(result.data!=null) setAuthors(result.data);\r\n       \r\n   }\r\n\r\n    useEffect(() => {\r\n      loadAuthors();\r\n      loadComments();\r\n    }, [])\r\n\r\n\r\n    const editPost = () => {\r\n        setEditStatus(!editStatus);\r\n    }\r\n    const editDone = () => {\r\n        console.log(\"edit done\");\r\n        window.location.reload();\r\n    }\r\n   \r\n\r\n    const renderComments= () => {\r\n        if(commentsVisibility){\r\n            return (\r\n                comments&&<div className=\"scroll-container-comments\">\r\n                    <CreateComment reload={loadComments} postId={props.id}/>\r\n                    {comments.map(comment=> <div key={comment.id}><Comment reload={loadComments} id={comment.id} postId={props.id}/> </div>)}          \r\n                 </div> \r\n            )\r\n        }else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    const deletePost= async ()=>{\r\n       await axios.delete(`${url}/post${props.id}/delete`)\r\n        .then(res => {\r\n            console.log(res);\r\n            setModalVisibility(false);\r\n            window.location.reload();\r\n        } )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n<div>\r\n            {(editStatus&&authors) ?  (\r\n                <EditPost editStatus={editDone} id={props.id} content={props.content}  authors={authors} tags={props.tag === 'undefined' ? '' : props.tag} />\r\n            ) : (\r\n                <div>\r\n                <div className=\"Post\" >\r\n                <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"Header\">\r\n                            <GroupIcon />\r\n                            <h5>Authors:</h5>\r\n                            {authors.map(author => <a key={author.id}>{' '}{author.name},</a>)}\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        {props.tag === 'undefined' ? '' : `Tags: ${props.tag}`}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"Content\">\r\n                           {props.content}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"Comments-container\">\r\n                                <div>\r\n                                    <ChatIcon />\r\n                                    <a>{comments.length} {' '} comments</a>\r\n                                </div>\r\n                                <button onClick={showComments}>Comments</button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs=\"2\"  sm=\"2\"  md=\"2\"  lg=\"2\"  xl=\"2\">\r\n                        <div className=\"Operations\">\r\n                            <EditIcon onClick={editPost}/>\r\n                            <DeleteIcon onClick={() => setModalVisibility(true)}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n           \r\n            { renderComments()}\r\n\r\n\r\n            <div>\r\n                <Modal\r\n                    show={modalVisibility}\r\n                    size=\"md\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            I am going to delete this post! \r\n                    </Modal.Title>\r\n                    <button onClick={() => setModalVisibility(false)}>x</button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        \r\n                        <h4>Are u okey with that?</h4>\r\n                        \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                       <button onClick={deletePost}>Delete</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                \r\n            </div>\r\n            \r\n            </div>\r\n \r\n            </div>\r\n            )\r\n             \r\n\r\n            }\r\n  \r\n  </div>       \r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Comment.js",["97","98","99"],"import React, { useEffect, useState } from 'react'\r\nimport '../Styles/Comment.css'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport axios from 'axios'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EditComment from './EditComment';\r\nconst url='https://blog-api-spring.herokuapp.com';\r\nfunction Comment(props) {\r\n    const [comment, setComment]= useState([]);\r\n    const [edit,setEdit] = useState(false);\r\n\r\n\r\n    async function loadComment(){\r\n        const result = await axios.get(`${url}/comments/get${props.id}`);\r\n        setComment(result.data);\r\n        console.log(result.data);\r\n     }\r\n    useEffect(() => {\r\n      loadComment();\r\n    }, [])\r\n\r\n    const deleteComment = async() => {\r\n        await axios.delete(`${url}/comment${props.id}/delete`)\r\n        .then(res => {\r\n            console.log(res);\r\n            props.reload();\r\n        })\r\n    }\r\n    const changeStatus = () => {\r\n        setEdit(false);\r\n        loadComment();\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                (edit) ? \r\n                <EditComment changeStatus={changeStatus} id={props.id} postId={props.postId} author={comment.username} content={comment.commentContent}/>\r\n                :\r\n                <div className=\"Comment\">\r\n                    <div>\r\n                        <AccountCircleIcon/>\r\n                        <a>authorname: {' '}</a>\r\n                        <a>{comment.username}</a>\r\n                    </div>\r\n                    <div className=\"Comment-content\">\r\n                            {comment.commentContent}<div><EditIcon onClick={()=>setEdit(true)} fontSize=\"small\"/><DeleteIcon onClick={deleteComment} fontSize=\"small\"/></div>\r\n                    </div>\r\n                 \r\n                </div>\r\n            }\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Comment\r\n","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\CreatePost.js",["100","101","102","103","104","105","106","107","108","109","110","111","112"],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\CreateComment.js",[],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\EditPost.js",["113","114","115","116","117","118"],"import React, { useEffect, useState } from 'react'\r\nimport '../Styles/EditPost.css'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Col,Row,Container } from 'react-bootstrap';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport axios from 'axios';\r\nconst url='https://blog-api-spring.herokuapp.com';\r\nfunction EditPost(props) {\r\n    \r\n    const [authors,setAuthors] =useState([]);\r\n    const [deletedAuthors,setDelatedAuthors] =useState([]);\r\n    const [tags, setTags] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        setAuthors(props.authors);\r\n        setTags(props.tags);\r\n        setContent(props.content);\r\n    }, [])\r\n\r\n    const removeAuthor = (author) => {\r\n        let arr = authors.filter(function(item) {\r\n            return item.name !== author.name\r\n        })\r\n        setAuthors(arr);\r\n        deletedAuthors.push(author);\r\n       \r\n    }\r\n    const changeAuthors = (e) =>{\r\n  \r\n        if(e.key==='Enter'){\r\n          let author = {name : e.target.value};\r\n          const list = authors.concat([author]);\r\n          setAuthors(list);\r\n        }\r\n    }\r\n    const changeTag = (e) =>{\r\n  \r\n        if(e.key==='Enter'){\r\n    \r\n          setTags(e.target.value);\r\n       \r\n        }\r\n    }\r\n\r\n    const contentChange = (e) =>{\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const saveChanges=() => {\r\n        if(authors.length===0) alert(\"Dont forget about authors!\")\r\n        addPost();\r\n        \r\n    }\r\n\r\n    async function addPost(){     \r\n        await axios.post(`${url}/post/edit` ,{'id':`${props.id}`,'tag' : `${tags}` , 'postContent' : `${content}`})\r\n        .then(res=>{\r\n            addAuthor(props.id);\r\n            console.log(res.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Post content is empty\");\r\n        })\r\n    }\r\n\r\n\r\n    async function addAuthor(postId){\r\n        await Promise.all( authors.map((author,index) => {\r\n            axios.post(`${url}/authors/add` ,{'name':`${author.name}`})\r\n            .then(res =>{\r\n                addAuthorsToPosts(res.data.id,postId);\r\n                if(index===authors.length-1) deleteAuthorsToPosts(postId)\r\n            });\r\n       }))\r\n   }\r\n   \r\n     async function addAuthorsToPosts(id,postId){\r\n            await axios.post(`${url}/post${postId}/addAuthor${id}`)\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    async function deleteAuthorsToPosts(postId){\r\n        \r\n        if(deletedAuthors.length===0) props.editStatus();\r\n        await Promise.all( deletedAuthors.map( (author,index) => {\r\n            axios.delete(`${url}/post${postId}/author${author.id}`)\r\n            .then(res =>{\r\n                console.log(res)\r\n                if(index===deletedAuthors.length-1) props.editStatus();\r\n            } )\r\n           .catch(error => console.log(error));\r\n        }));\r\n      \r\n     \r\n}\r\n\r\n    return (\r\n        <div className=\"EditPost\" >\r\n        <Container>\r\n        <Row>\r\n            <Col>\r\n                <div className=\"EditHeader\">\r\n                    <GroupIcon />\r\n                    <h5>Authors:</h5>\r\n                    {authors.map((author) => {\r\n                        return ( <a>{author.name} <RemoveCircleOutlineIcon onClick={removeAuthor.bind(this,author)}/></a>)\r\n                    })} \r\n                </div>\r\n                <input onKeyUp={e=>changeAuthors(e)} id=\"addAuthorInput\" className=\"editAuthorsInput\" placeholder={'Add new author'}></input><AddCircleOutlineIcon style={{color: \"green\"}}/>\r\n            </Col>\r\n            <Col>\r\n                Tags: {tags} \r\n                <input placeholder=\"Change tags\" onKeyUp={e=>changeTag(e)}></input>\r\n                <AddCircleOutlineIcon style={{color: \"green\"}}/>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                <div className=\"EditContent\">\r\n                   <textarea onChange={e => contentChange(e)} className=\"EditTextArea\" value={content}></textarea>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                    <button onClick={saveChanges}>Save changes</button>\r\n            </Col>\r\n            <Col xs=\"2\"  sm=\"2\"  md=\"2\"  lg=\"2\"  xl=\"2\">\r\n                <div className=\"EditOperations\">\r\n                    <EditIcon/>\r\n                    <DeleteIcon/>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\EditComment.js",["119","120"],"import React, { useEffect , useState} from 'react'\r\nimport '../Styles/EditComment.css'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport axios from 'axios'\r\nconst url='https://blog-api-spring.herokuapp.com';\r\nfunction EditComment(props) {\r\n    const [content, setContent] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    useEffect(() => {\r\n     setAuthor(props.author);\r\n     setContent(props.content);\r\n    }, [])\r\n\r\n    const saveComment = async () => {\r\n        if(author==='' || content === '') alert('Comment must include author and content ');\r\n        else{\r\n        await axios.post(`${url}/comments/edit`,{'id' : `${props.id}` , 'postId' : `${props.postId}`, 'username' : `${author}` , 'commentContent' : `${content}`})\r\n        .then(res => {\r\n            console.log(res);\r\n            props.changeStatus();\r\n        })\r\n    }\r\n    }\r\n    return (\r\n    <div className=\"EditComment\">\r\n        <div>\r\n            <AccountCircleIcon/>\r\n            <a>authorname: {' '}</a>\r\n            <input  onChange={(e)=> setAuthor(e.target.value)} value={author}></input>\r\n        </div>\r\n        <div className=\"EditComment-content\">   \r\n             <textarea className=\"editInput\" onChange={(e)=> setContent(e.target.value)} value={content}></textarea>\r\n        </div>\r\n        <button onClick={saveComment} className=\"savebutton\">save</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditComment\r\n","C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\Authors.js",["121","122","123"],"C:\\Repozytoria\\blogspringfrontend\\blog-frontend\\src\\components\\AuthorStats.js",["124","125","126","127","128"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nconst url='https://blog-api-spring.herokuapp.com';\r\nexport default function AuthorStats(props) {\r\n    const [comments , setComments] = useState('');\r\n    const [posts , setPosts] = useState('');\r\n    const [loading,setLoading]=useState(true);\r\n\r\n    useEffect(() => {\r\n        laodAuthorStats();\r\n    }, [props.id])\r\n\r\n    //load stats with authors\r\n    const laodAuthorStats =  () => {\r\n        console.log(props.id);\r\n         axios.get(`${url}/authors${props.id}/stats`)\r\n        .then(res => {\r\n            setPosts(res.data.postsNumber);\r\n            setComments(res.data.commentsNumber);\r\n            setLoading(false);\r\n        });\r\n       \r\n    }\r\n    return (\r\n        <div  className=\"Author-container\">\r\n            <div className=\"AuthorName\">\r\n                {props.name}\r\n            </div>\r\n        \r\n            <div className=\"Stats\">\r\n           {loading? <a>loading...</a> : <a>Posts : {posts}</a> } \r\n           {loading? <a>loading...</a> : <a>Comments : {comments}</a>}\r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n",{"ruleId":"129","severity":1,"message":"130","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":12},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"129","severity":1,"message":"139","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"140","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":12},{"ruleId":"133","replacedBy":"141"},{"ruleId":"135","replacedBy":"142"},{"ruleId":"129","severity":1,"message":"143","line":2,"column":18,"nodeType":"131","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":28},{"ruleId":"129","severity":1,"message":"145","line":1,"column":41,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"146","line":3,"column":9,"nodeType":"131","messageId":"132","endLine":3,"endColumn":12},{"ruleId":"129","severity":1,"message":"147","line":3,"column":14,"nodeType":"131","messageId":"132","endLine":3,"endColumn":23},{"ruleId":"129","severity":1,"message":"148","line":3,"column":25,"nodeType":"131","messageId":"132","endLine":3,"endColumn":28},{"ruleId":"129","severity":1,"message":"149","line":17,"column":12,"nodeType":"131","messageId":"132","endLine":17,"endColumn":17},{"ruleId":"129","severity":1,"message":"150","line":18,"column":18,"nodeType":"131","messageId":"132","endLine":18,"endColumn":26},{"ruleId":"129","severity":1,"message":"151","line":21,"column":11,"nodeType":"131","messageId":"132","endLine":21,"endColumn":18},{"ruleId":"129","severity":1,"message":"152","line":21,"column":20,"nodeType":"131","messageId":"132","endLine":21,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":33,"column":39,"nodeType":"155","messageId":"156","endLine":33,"endColumn":41},{"ruleId":"157","severity":1,"message":"158","line":47,"column":4,"nodeType":"159","endLine":47,"endColumn":6,"suggestions":"160"},{"ruleId":"133","replacedBy":"161"},{"ruleId":"135","replacedBy":"162"},{"ruleId":"157","severity":1,"message":"163","line":38,"column":8,"nodeType":"159","endLine":38,"endColumn":10,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":89,"column":52,"nodeType":"167","endLine":89,"endColumn":71},{"ruleId":"165","severity":1,"message":"166","line":108,"column":37,"nodeType":"167","endLine":108,"endColumn":40},{"ruleId":"157","severity":1,"message":"168","line":21,"column":8,"nodeType":"159","endLine":21,"endColumn":10,"suggestions":"169"},{"ruleId":"165","severity":1,"message":"166","line":44,"column":25,"nodeType":"167","endLine":44,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":45,"column":25,"nodeType":"167","endLine":45,"endColumn":28},{"ruleId":"129","severity":1,"message":"170","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"171","line":7,"column":17,"nodeType":"131","messageId":"132","endLine":7,"endColumn":24},{"ruleId":"129","severity":1,"message":"152","line":11,"column":21,"nodeType":"131","messageId":"132","endLine":11,"endColumn":31},{"ruleId":"129","severity":1,"message":"172","line":12,"column":12,"nodeType":"131","messageId":"132","endLine":12,"endColumn":20},{"ruleId":"129","severity":1,"message":"173","line":12,"column":21,"nodeType":"131","messageId":"132","endLine":12,"endColumn":32},{"ruleId":"129","severity":1,"message":"174","line":13,"column":12,"nodeType":"131","messageId":"132","endLine":13,"endColumn":21},{"ruleId":"129","severity":1,"message":"175","line":13,"column":23,"nodeType":"131","messageId":"132","endLine":13,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":63,"column":49,"nodeType":"155","messageId":"156","endLine":63,"endColumn":51},{"ruleId":"165","severity":1,"message":"166","line":98,"column":29,"nodeType":"167","endLine":98,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":107,"column":29,"nodeType":"167","endLine":107,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":110,"column":29,"nodeType":"167","endLine":110,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":130,"column":37,"nodeType":"167","endLine":130,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":133,"column":37,"nodeType":"167","endLine":133,"endColumn":40},{"ruleId":"129","severity":1,"message":"176","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":16},{"ruleId":"129","severity":1,"message":"177","line":15,"column":27,"nodeType":"131","messageId":"132","endLine":15,"endColumn":44},{"ruleId":"157","severity":1,"message":"178","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":10,"suggestions":"179"},{"ruleId":"153","severity":1,"message":"154","line":73,"column":55,"nodeType":"155","messageId":"156","endLine":73,"endColumn":57},{"ruleId":"153","severity":1,"message":"154","line":90,"column":63,"nodeType":"155","messageId":"156","endLine":90,"endColumn":65},{"ruleId":"165","severity":1,"message":"166","line":111,"column":34,"nodeType":"167","endLine":111,"endColumn":37},{"ruleId":"157","severity":1,"message":"180","line":12,"column":8,"nodeType":"159","endLine":12,"endColumn":10,"suggestions":"181"},{"ruleId":"165","severity":1,"message":"166","line":28,"column":13,"nodeType":"167","endLine":28,"endColumn":16},{"ruleId":"129","severity":1,"message":"152","line":11,"column":21,"nodeType":"131","messageId":"132","endLine":11,"endColumn":31},{"ruleId":"157","severity":1,"message":"182","line":17,"column":8,"nodeType":"159","endLine":17,"endColumn":10,"suggestions":"183"},{"ruleId":"153","severity":1,"message":"154","line":23,"column":32,"nodeType":"155","messageId":"156","endLine":23,"endColumn":34},{"ruleId":"157","severity":1,"message":"184","line":11,"column":8,"nodeType":"159","endLine":11,"endColumn":18,"suggestions":"185"},{"ruleId":"165","severity":1,"message":"166","line":31,"column":22,"nodeType":"167","endLine":31,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":31,"column":42,"nodeType":"167","endLine":31,"endColumn":45},{"ruleId":"165","severity":1,"message":"166","line":32,"column":22,"nodeType":"167","endLine":32,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":32,"column":42,"nodeType":"167","endLine":32,"endColumn":45},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["186"],"no-negated-in-lhs",["187"],["186"],["187"],"'useState' is defined but never used.","'Navi' is defined but never used.",["186"],["187"],"'Nav' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'error' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'authors' is assigned a value but never used.","'setAuthors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loopWithSlice' and 'posts'. Either include them or remove the dependency array.","ArrayExpression",["188"],["186"],["187"],"React Hook useEffect has missing dependencies: 'loadAuthors' and 'loadComments'. Either include them or remove the dependency array.",["189"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadComment'. Either include it or remove the dependency array.",["190"],"'useEffect' is defined but never used.","'setTags' is assigned a value but never used.","'authorId' is assigned a value but never used.","'setAuthorId' is assigned a value but never used.","'addStatus' is assigned a value but never used.","'setAddStatus' is assigned a value but never used.","'ChatIcon' is defined but never used.","'setDelatedAuthors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.authors', 'props.content', and 'props.tags'. Either include them or remove the dependency array. If 'setAuthors' needs the current value of 'props.authors', you can also switch to useReducer instead of useState and read 'props.authors' in the reducer.",["191"],"React Hook useEffect has missing dependencies: 'props.author' and 'props.content'. Either include them or remove the dependency array. If 'setAuthor' needs the current value of 'props.author', you can also switch to useReducer instead of useState and read 'props.author' in the reducer.",["192"],"React Hook useEffect has a missing dependency: 'laodAuthors'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'laodAuthorStats'. Either include it or remove the dependency array.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [loopWithSlice, posts]",{"range":"209","text":"210"},"Update the dependencies array to be: [loadAuthors, loadComments]",{"range":"211","text":"212"},"Update the dependencies array to be: [loadComment]",{"range":"213","text":"214"},"Update the dependencies array to be: [props.authors, props.content, props.tags]",{"range":"215","text":"216"},"Update the dependencies array to be: [props.author, props.content]",{"range":"217","text":"218"},"Update the dependencies array to be: [laodAuthors]",{"range":"219","text":"220"},"Update the dependencies array to be: [laodAuthorStats, props.id]",{"range":"221","text":"222"},[1347,1349],"[loopWithSlice, posts]",[1470,1472],"[loadAuthors, loadComments]",[737,739],"[loadComment]",[941,943],"[props.authors, props.content, props.tags]",[455,457],"[props.author, props.content]",[622,624],"[laodAuthors]",[383,393],"[laodAuthorStats, props.id]"]