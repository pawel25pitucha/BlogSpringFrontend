[{"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\index.js":"1","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\App.js":"2","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Board.js":"3","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\EditPost.js":"4","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\EditComment.js":"5","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Post.js":"6","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\CreatePost.js":"7","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\PickerInput.js":"8","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Authors.js":"9","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\reportWebVitals.js":"10","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Home.js":"11","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Navi.js":"12","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\AuthorStats.js":"13","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\CreateComment.js":"14","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\LoginPage.js":"15","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Comment.js":"16","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Register.js":"17","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\reducers\\isLogged.js":"18","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\actions\\login.js":"19"},{"size":1238,"mtime":1611004737324,"results":"20","hashOfConfig":"21"},{"size":635,"mtime":1611004663133,"results":"22","hashOfConfig":"21"},{"size":1817,"mtime":1611004260028,"results":"23","hashOfConfig":"21"},{"size":4164,"mtime":1610998676764,"results":"24","hashOfConfig":"21"},{"size":1504,"mtime":1611007811509,"results":"25","hashOfConfig":"21"},{"size":6524,"mtime":1611007784868,"results":"26","hashOfConfig":"21"},{"size":4065,"mtime":1611002349839,"results":"27","hashOfConfig":"21"},{"size":1245,"mtime":1610991742245,"results":"28","hashOfConfig":"21"},{"size":3461,"mtime":1607957415984,"results":"29","hashOfConfig":"21"},{"size":362,"mtime":1607372859761,"results":"30","hashOfConfig":"21"},{"size":1307,"mtime":1610998961747,"results":"31","hashOfConfig":"21"},{"size":2091,"mtime":1611004683529,"results":"32","hashOfConfig":"21"},{"size":1116,"mtime":1607951903756,"results":"33","hashOfConfig":"21"},{"size":1646,"mtime":1611005798298,"results":"34","hashOfConfig":"21"},{"size":1958,"mtime":1611009283152,"results":"35","hashOfConfig":"21"},{"size":2272,"mtime":1611007907094,"results":"36","hashOfConfig":"21"},{"size":1609,"mtime":1611003421658,"results":"37","hashOfConfig":"21"},{"size":218,"mtime":1610996272699,"results":"38","hashOfConfig":"21"},{"size":100,"mtime":1610996262594,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c8awip",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\index.js",["87"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\App.js",["88"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Board.js",["89","90","91","92","93","94"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\EditPost.js",["95","96","97","98","99","100","101"],"import React, { useEffect, useState } from 'react'\r\nimport '../Styles/EditPost.css'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Col,Row,Container } from 'react-bootstrap';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport axios from 'axios';\r\nimport PickerInput from './PickerInput';\r\nconst url='http://localhost:8080';\r\n\r\nfunction EditPost(props) {\r\n    \r\n    const [authors,setAuthors] =useState([]);\r\n    const [deletedAuthors,setDelatedAuthors] =useState([]);\r\n    const [tags, setTags] = useState([]);\r\n    const [content, setContent] = useState('');\r\n    const [tagValue,setTagValue]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setAuthors(props.authors);\r\n        setTags(props.tags);\r\n        setContent(props.content);\r\n    }, [])\r\n\r\n    const removeAuthor = (author) => {\r\n        let arr = authors.filter(function(item) {\r\n            return item.name !== author.name\r\n        })\r\n        setAuthors(arr);\r\n       \r\n    }\r\n\r\n    const removeTag = (tag) => {\r\n        let arr = tags.filter(function(item) {\r\n            return item !== tag\r\n        })\r\n        setTags(arr);\r\n   \r\n       \r\n    }\r\n \r\n    const changeTag = (e) =>{\r\n\r\n          setTags([...tags,tagValue]);\r\n    }\r\n    const handleChangeTag=(e)=>{\r\n        setTagValue(e.target.value);\r\n    }\r\n\r\n    const contentChange = (e) =>{\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const saveChanges=() => {\r\n        if(authors.length===0) alert(\"Dont forget about authors!\")\r\n        addPost();\r\n        \r\n    }\r\n\r\n    async function addPost(){     \r\n        axios({\r\n            method: 'PUT',\r\n            url: `${url}/api/post/edit`,\r\n            data: {\r\n                id: props.id,\r\n                tags: tags,\r\n                content: content,\r\n                authors:authors\r\n            }\r\n          }).then(res=>{\r\n              console.log(res);\r\n              props.editStatus();\r\n          })\r\n    }\r\n\r\n    const addAuthor=(author)=>{\r\n        if(author!=null){\r\n        if(authors.includes(author)) alert(\"Ten autor został już dodany\")\r\n        else {const list = authors.concat([author]);\r\n        setAuthors(list);\r\n        }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"EditPost\" >\r\n        <Container>\r\n        <Row>\r\n            <Col>\r\n                <div className=\"EditHeader\">\r\n                    <GroupIcon />\r\n                    <h5>Authors:</h5>\r\n                    {authors&&authors.map((author) => {\r\n                        return ( <a>{author.name} <RemoveCircleOutlineIcon onClick={removeAuthor.bind(this,author)}/></a>)\r\n                    })} \r\n                    <PickerInput add={addAuthor}/>\r\n                </div>\r\n              \r\n            </Col>\r\n            <Col>\r\n                    Tags: {\r\n                        tags&&tags.map(tag=> {\r\n                            return (\r\n                                <a>{tag} <RemoveCircleOutlineIcon onClick={removeTag.bind(this,tag)}/>,</a>\r\n                            )\r\n                        })\r\n                    }\r\n                <input placeholder=\"Change tags\" onChange={e=>handleChangeTag(e)} value={tagValue}></input><button onClick={changeTag}>add</button>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                <div className=\"EditContent\">\r\n                   <textarea onChange={e => contentChange(e)} className=\"EditTextArea\" value={content}></textarea>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                <button onClick={saveChanges}>Save changes</button>\r\n            </Col>\r\n            <Col xs=\"2\"  sm=\"2\"  md=\"2\"  lg=\"2\"  xl=\"2\">\r\n                <div className=\"EditOperations\">\r\n                    <EditIcon/>\r\n                    <DeleteIcon/>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n",["102","103"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\EditComment.js",["104","105"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Post.js",["106","107","108","109","110","111","112","113"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\CreatePost.js",["114","115","116","117","118","119","120","121","122"],"import React, { useEffect, useState } from 'react'\r\nimport '../Styles/CreatePost.css'\r\nimport {Button,Container,Row,Col} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport PickerInput from './PickerInput';\r\nconst url='http://localhost:8080';\r\nfunction CreatePost(props) {\r\n    const [tags,setTags]=useState([]);\r\n    const [tagValue,setTagValue]=useState('');\r\n    const [authorValue,setAuthorValue]=useState('');\r\n    const [postContent,setPostContent] = useState('');\r\n    const [authors, setAuthors] = useState([]);\r\n\r\n\r\n    const handleClick= (e) =>{\r\n        if(e.key==='Enter'){\r\n            tags.push(tagValue);\r\n            setTagValue('');\r\n        }\r\n    }\r\n    const handleChange= (e) =>{\r\n        setTagValue(e.target.value);\r\n    }\r\n\r\n    /*----------------------------------*/\r\n    const addAuthor=(author) => {\r\n        if(author!=null){\r\n        if(!authors.includes(author)) setAuthors([...authors,author]);\r\n        else alert(\"już dodałeś tego autora\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /*----------------------------------*/\r\n    const postContentChange =(e) => {\r\n        setPostContent(e.target.value);\r\n\r\n\r\n    /*----------------------------------*/\r\n    }\r\n    const savePost =  () =>{\r\n        if(authors.length===0) alert(\"Dont forget about authors!\");\r\n        else addPost();\r\n    }\r\n\r\n    async function addPost(){     \r\n         axios({\r\n            method: 'POST',\r\n            url: `${url}/api/post/save`,\r\n            data: {\r\n            authors:authors,\r\n            content: postContent,\r\n            tags:tags,\r\n            }\r\n          }).then(res=> props.updatePosts());\r\n        \r\n    }\r\n\r\n   \r\n    return (\r\n        <div className=\"CreatePost\">\r\n\r\n  \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    {\r\n                        tags.length>0 ?\r\n                        tags.map(tag => (\r\n                            <a>#{tag}</a>\r\n                        ))\r\n                        :''\r\n                    }\r\n                </Col>   \r\n                <Col>        \r\n                        <div>\r\n                            <a>Authors:</a>\r\n                            {\r\n                                authors.length?\r\n                                authors.map(author => {\r\n                                   \r\n                                       return ( <a key={author.id}>{author.name},</a> )\r\n                                    \r\n                                 } ) : ''\r\n                            }\r\n                        </div>                  \r\n                </Col> \r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <form>\r\n                        <textarea onChange={e => postContentChange(e)} value={postContent} placeholder=\"Hey, how u doin?\"></textarea>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <a>Leave some tags:</a>\r\n                                    <input onKeyUp={e => handleClick(e)} onChange={(e)=>handleChange(e)} value={tagValue} placeholder=\"Add tag\"></input></Col>\r\n                                <Col>\r\n                                    <a>Authors:</a>\r\n                                    <PickerInput add={addAuthor}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col></Col>\r\n                                <Col xs=\"6\"  sm=\"6\"  md =\"6\" lg=\"6\"  xl=\"6\">\r\n                                    <Button className=\"add-button\" onClick={savePost}  size=\"sm\" style={{backgroundColor:\"#12343b\"}}>Add Post</Button>\r\n                                </Col>\r\n                                <Col></Col>\r\n                            </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\PickerInput.js",["123"],"import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nexport default function PickerInput(props) {\r\n    const url=\"http://localhost:8080\";\r\n    const [authors,setAuthors]=useState([]);\r\n    const[addedAuthors,setAddedAuthors]= useState([]);\r\n\r\nuseEffect(() => {\r\n    axios({\r\n        method: 'GET',\r\n        url: `${url}/api/author/get-all`,\r\n      }).then(res=>{\r\n          setAuthors(res.data);\r\n      })\r\n}, [])\r\nconst handleChange=(e,value)=>{\r\n        props.add(value);\r\n}\r\n  return (\r\n      <div>\r\n          {addedAuthors.map(author => {\r\n              return(\r\n                  <div key={author.id}>\r\n                    <h3>{author.name}</h3>\r\n                  </div>\r\n              )\r\n          })}\r\n            <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={authors}\r\n                getOptionLabel={(author) => author.name}\r\n                style={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Wybierz autora\" variant=\"outlined\" />}\r\n                onChange={handleChange}\r\n            />\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\n",["124","125"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Authors.js",["126","127","128"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\nimport Navi from './Navi';\r\nimport '../Styles/Authors.css'\r\nimport AuthorStats from './AuthorStats';\r\nconst url='https://blog-api-spring.herokuapp.com';\r\nconst authorsPerPage = 50;\r\nlet arrayForHoldingPosts = [];\r\nfunction Authors() {\r\n    const [authors, setAuthors] = useState([]);\r\n    const [authorsToShow, setAuthorsToShow] = useState([]);\r\n    const [search , setSearch ] = useState('');\r\n    const [next, setNext] = useState(50);\r\n    useEffect(() => {\r\n        laodAuthors();\r\n    }, [])\r\n\r\n    //load stats with authors\r\n    const laodAuthors = async () => {\r\n        await axios.get(`${url}/authors/get`)\r\n        .then(res => {\r\n           res.data.map( author=>{\r\n               authors.push(author);\r\n           })\r\n           loopWithSlice(0,authorsPerPage);\r\n        });\r\n    }\r\n    const searchAuthor= async (e) =>{\r\n        if(e.key==='Enter'){\r\n            await axios.get(`${url}/authors/getByName${search}`)\r\n            .then(res => {\r\n                if(res.data!=='') setAuthorsToShow([res.data]);\r\n                else alert('No results');\r\n            })\r\n        }\r\n        if(e.target.value === '') {\r\n            laodAuthors();\r\n        }    \r\n       \r\n    }\r\n\r\n    const loopWithSlice = (start, end) => {\r\n        let slicedPosts = authors.slice(start, end);\r\n        arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\r\n        setAuthorsToShow(arrayForHoldingPosts);\r\n      };\r\n\r\n      const handleShowMoreAuthors = () => {\r\n        loopWithSlice(next, next + authorsPerPage);\r\n        setNext(next + authorsPerPage);\r\n      };\r\n\r\n \r\n\r\n    return (\r\n\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs=\"1\"  sm=\"1\"  md=\"1\"  lg=\"1\"  xl=\"2\"  id=\"col-1\"></Col>\r\n                    <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"8\"  id=\"col-2\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"0\" xl=\"2\">\r\n           \r\n                            </Col>\r\n                            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"8\">\r\n                   \r\n                                <div className=\"Authorscroll-container\">\r\n                                <Navi/>\r\n                                <input onKeyUp={e=>searchAuthor(e)} onChange={(e)=>setSearch(e.target.value)} value={search} placeholder=\"Find Author\" ></input>\r\n                                    {\r\n                                        authorsToShow.map(author => {\r\n                                             return (\r\n                                                    <AuthorStats id={author.id} name={author.name}/>\r\n                                             )  \r\n                                        })\r\n                                    }\r\n                                 <button onClick={handleShowMoreAuthors}>Load more</button>\r\n\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs=\"0\"  sm=\"0\"  md =\"0\" lg=\"0\"  xl=\"2\"></Col>\r\n                        </Row>\r\n                    </Container>\r\n                    </Col>\r\n                    <Col xs=\"1\"  sm=\"1\"  md=\"1\"  lg=\"1\"  xl=\"2\" id=\"col-3\">\r\n    \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Authors\r\n","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\reportWebVitals.js",[],["129","130"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Home.js",["131"],"import React, { useState } from 'react'\r\nimport \"../Styles/Home.css\";\r\nimport {Container,Row,Col} from 'react-bootstrap';\r\nimport Board from './Board';\r\nfunction Home(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs=\"1\"  sm=\"1\"  md=\"1\"  lg=\"1\"  xl=\"2\"  id=\"col-1\"></Col>\r\n                    <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"8\"  id=\"col-2\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"0\" xl=\"2\">\r\n                            \r\n                            </Col>\r\n                            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"8\">\r\n                                <div className=\"scroll-container\">\r\n                                    <Board user={props.user}/>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs=\"0\"  sm=\"0\"  md =\"0\" lg=\"0\"  xl=\"2\"></Col>\r\n                        </Row>\r\n                    </Container>\r\n                    </Col>\r\n                    <Col xs=\"1\"  sm=\"1\"  md=\"1\"  lg=\"1\"  xl=\"2\" id=\"col-3\">\r\n    \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Navi.js",["132"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\AuthorStats.js",["133","134","135","136","137"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nconst url='https://blog-api-spring.herokuapp.com';\r\nexport default function AuthorStats(props) {\r\n    const [comments , setComments] = useState('');\r\n    const [posts , setPosts] = useState('');\r\n    const [loading,setLoading]=useState(true);\r\n\r\n    useEffect(() => {\r\n        laodAuthorStats();\r\n    }, [props.id])\r\n\r\n    //load stats with authors\r\n    const laodAuthorStats =  () => {\r\n        console.log(props.id);\r\n         axios.get(`${url}/authors${props.id}/stats`)\r\n        .then(res => {\r\n            setPosts(res.data.postsNumber);\r\n            setComments(res.data.commentsNumber);\r\n            setLoading(false);\r\n        });\r\n       \r\n    }\r\n    return (\r\n        <div  className=\"Author-container\">\r\n            <div className=\"AuthorName\">\r\n                {props.name}\r\n            </div>\r\n        \r\n            <div className=\"Stats\">\r\n           {loading? <a>loading...</a> : <a>Posts : {posts}</a> } \r\n           {loading? <a>loading...</a> : <a>Comments : {comments}</a>}\r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n","C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\CreateComment.js",[],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\LoginPage.js",[],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Comment.js",["138","139","140"],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\components\\Register.js",[],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\reducers\\isLogged.js",[],"C:\\Users\\ppitucha\\Documents\\GitHub\\BlogSpringFrontend\\src\\actions\\login.js",[],{"ruleId":"141","severity":1,"message":"142","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":16},{"ruleId":"141","severity":1,"message":"145","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"146","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":28},{"ruleId":"141","severity":1,"message":"147","line":1,"column":41,"nodeType":"143","messageId":"144","endLine":1,"endColumn":47},{"ruleId":"141","severity":1,"message":"148","line":16,"column":11,"nodeType":"143","messageId":"144","endLine":16,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":25,"column":4,"nodeType":"151","endLine":25,"endColumn":6,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":41,"column":18,"nodeType":"155","messageId":"156","endLine":41,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":42,"column":23,"nodeType":"155","messageId":"156","endLine":42,"endColumn":25},{"ruleId":"141","severity":1,"message":"157","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":16},{"ruleId":"141","severity":1,"message":"158","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":28},{"ruleId":"141","severity":1,"message":"159","line":17,"column":12,"nodeType":"143","messageId":"144","endLine":17,"endColumn":26},{"ruleId":"141","severity":1,"message":"160","line":17,"column":27,"nodeType":"143","messageId":"144","endLine":17,"endColumn":44},{"ruleId":"149","severity":1,"message":"161","line":26,"column":8,"nodeType":"151","endLine":26,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":98,"column":34,"nodeType":"165","endLine":98,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":108,"column":33,"nodeType":"165","endLine":108,"endColumn":36},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"149","severity":1,"message":"170","line":12,"column":8,"nodeType":"151","endLine":12,"endColumn":10,"suggestions":"171"},{"ruleId":"163","severity":1,"message":"164","line":37,"column":13,"nodeType":"165","endLine":37,"endColumn":16},{"ruleId":"141","severity":1,"message":"148","line":23,"column":11,"nodeType":"143","messageId":"144","endLine":23,"endColumn":19},{"ruleId":"149","severity":1,"message":"172","line":41,"column":8,"nodeType":"151","endLine":41,"endColumn":10,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"154","line":60,"column":36,"nodeType":"155","messageId":"156","endLine":60,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":76,"column":279,"nodeType":"176","endLine":76,"endColumn":353},{"ruleId":"163","severity":1,"message":"164","line":110,"column":52,"nodeType":"165","endLine":110,"endColumn":71},{"ruleId":"163","severity":1,"message":"164","line":116,"column":33,"nodeType":"165","endLine":116,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":133,"column":37,"nodeType":"165","endLine":133,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":139,"column":33,"nodeType":"179","messageId":"180","endLine":139,"endColumn":35},{"ruleId":"141","severity":1,"message":"181","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"182","line":8,"column":17,"nodeType":"143","messageId":"144","endLine":8,"endColumn":24},{"ruleId":"141","severity":1,"message":"183","line":10,"column":12,"nodeType":"143","messageId":"144","endLine":10,"endColumn":23},{"ruleId":"141","severity":1,"message":"184","line":10,"column":24,"nodeType":"143","messageId":"144","endLine":10,"endColumn":38},{"ruleId":"163","severity":1,"message":"164","line":71,"column":29,"nodeType":"165","endLine":71,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":78,"column":29,"nodeType":"165","endLine":78,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":83,"column":49,"nodeType":"165","endLine":83,"endColumn":68},{"ruleId":"163","severity":1,"message":"164","line":102,"column":37,"nodeType":"165","endLine":102,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":105,"column":37,"nodeType":"165","endLine":105,"endColumn":40},{"ruleId":"141","severity":1,"message":"185","line":8,"column":24,"nodeType":"143","messageId":"144","endLine":8,"endColumn":39},{"ruleId":"166","replacedBy":"186"},{"ruleId":"168","replacedBy":"187"},{"ruleId":"141","severity":1,"message":"188","line":11,"column":21,"nodeType":"143","messageId":"144","endLine":11,"endColumn":31},{"ruleId":"149","severity":1,"message":"189","line":17,"column":8,"nodeType":"151","endLine":17,"endColumn":10,"suggestions":"190"},{"ruleId":"153","severity":1,"message":"154","line":23,"column":32,"nodeType":"155","messageId":"156","endLine":23,"endColumn":34},{"ruleId":"166","replacedBy":"191"},{"ruleId":"168","replacedBy":"192"},{"ruleId":"141","severity":1,"message":"193","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"194","line":2,"column":18,"nodeType":"143","messageId":"144","endLine":2,"endColumn":21},{"ruleId":"149","severity":1,"message":"195","line":11,"column":8,"nodeType":"151","endLine":11,"endColumn":18,"suggestions":"196"},{"ruleId":"163","severity":1,"message":"164","line":31,"column":22,"nodeType":"165","endLine":31,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":31,"column":42,"nodeType":"165","endLine":31,"endColumn":45},{"ruleId":"163","severity":1,"message":"164","line":32,"column":22,"nodeType":"165","endLine":32,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":32,"column":42,"nodeType":"165","endLine":32,"endColumn":45},{"ruleId":"149","severity":1,"message":"197","line":21,"column":8,"nodeType":"151","endLine":21,"endColumn":10,"suggestions":"198"},{"ruleId":"163","severity":1,"message":"164","line":56,"column":25,"nodeType":"165","endLine":56,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":57,"column":25,"nodeType":"165","endLine":57,"endColumn":28},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","'isLogged' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.user'. Either include it or remove the dependency array. If 'setUser' needs the current value of 'props.user', you can also switch to useReducer instead of useState and read 'props.user' in the reducer.","ArrayExpression",["199"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ChatIcon' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'deletedAuthors' is assigned a value but never used.","'setDelatedAuthors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.authors', 'props.content', and 'props.tags'. Either include them or remove the dependency array. If 'setAuthors' needs the current value of 'props.authors', you can also switch to useReducer instead of useState and read 'props.authors' in the reducer.",["200"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["201"],"no-negated-in-lhs",["202"],"React Hook useEffect has missing dependencies: 'props.author' and 'props.content'. Either include them or remove the dependency array. If 'setAuthor' needs the current value of 'props.author', you can also switch to useReducer instead of useState and read 'props.author' in the reducer.",["203"],"React Hook useEffect has missing dependencies: 'check', 'loadComments', and 'props.authors'. Either include them or remove the dependency array. If 'setAuthors' needs the current value of 'props.authors', you can also switch to useReducer instead of useState and read 'props.authors' in the reducer.",["204"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'setTags' is assigned a value but never used.","'authorValue' is assigned a value but never used.","'setAuthorValue' is assigned a value but never used.","'setAddedAuthors' is assigned a value but never used.",["201"],["202"],"'setAuthors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'laodAuthors'. Either include it or remove the dependency array.",["205"],["201"],["202"],"'useState' is defined but never used.","'Nav' is defined but never used.","React Hook useEffect has a missing dependency: 'laodAuthorStats'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'check' and 'props.authorId'. Either include them or remove the dependency array.",["207"],{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [props.user]",{"range":"222","text":"223"},"Update the dependencies array to be: [props.authors, props.content, props.tags]",{"range":"224","text":"225"},"Update the dependencies array to be: [props.author, props.content]",{"range":"226","text":"227"},"Update the dependencies array to be: [check, loadComments, props.authors]",{"range":"228","text":"229"},"Update the dependencies array to be: [laodAuthors]",{"range":"230","text":"231"},"Update the dependencies array to be: [laodAuthorStats, props.id]",{"range":"232","text":"233"},"Update the dependencies array to be: [check, props.authorId]",{"range":"234","text":"235"},[651,653],"[props.user]",[1017,1019],"[props.authors, props.content, props.tags]",[439,441],"[props.author, props.content]",[1464,1466],"[check, loadComments, props.authors]",[622,624],"[laodAuthors]",[383,393],"[laodAuthorStats, props.id]",[738,740],"[check, props.authorId]"]